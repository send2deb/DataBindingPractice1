<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:bindemployee="http://schemas.android.com/tools"> <!-- Application namespace used to pass variable to included layout -->
    <!-- By default, a Binding class will be generated based on the name of the layout file,
    converting it to Pascal case and suffixing "Binding" to it. If the layout file name is activity_main.xml
    then the Binding class name will be ActivityMainBinding -->
    <!-- But If we want we can use a custom name using the 'class' attribute of data element.
    Here I'm using a custom name 'MyCustomBinding' for the binding class -->
    <data class="EmployeeBinding">

        <!-- Here the variable defines a property 'employee' which is a JAVA beans and this property
        is used later in the layout to bind the data to the layout -->
        <variable name="employee" type="com.debdroid.databindingpractice1.data.Employee"/>

        <!-- Here the variable defines a property 'employeeHandler' which is handler class used to handle
        events - Method Reference & Listener Binding -->
        <variable name="employeeDataHandler" type="com.debdroid.databindingpractice1.handler.EmployeeDataHandler" />

    </data>
    <LinearLayout
        android:orientation="vertical"
        android:padding="16dp"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <include
            android:id="@+id/includeBasicEmployeeInfo"
            layout="@layout/employee_basic_info"
            bindemployee:emp="@{employee}"/>

        <Button
            android:id="@+id/btWelcomeToastButton"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_alignParentBottom="true"
            android:layout_alignParentRight="true"
            android:text="Show Welcome Toast"
            android:onClick="@{employeeDataHandler::showWelcomeToast}"/> <!-- Event Handling using Method Reference -->
        <Button
            android:id="@+id/btAgeToastButton"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_alignParentBottom="true"
            android:layout_alignParentRight="true"
            android:text="Show Age Toast"
            android:onClick="@{() -> employeeDataHandler.showAge()}"/> <!-- Event Handling using Listener Binding -->

        <Button
            android:id="@+id/btChangeFirstNameButton"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_alignParentBottom="true"
            android:layout_alignParentRight="true"
            android:text="Change First Name to Ajit"
            android:onClick="@{() -> employeeDataHandler.changeFirstName()}"/> <!-- Event Handling using Listener Binding -->

        <Button
            android:id="@+id/btSwapisManagerFlagButton"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:layout_alignParentBottom="true"
            android:layout_alignParentRight="true"
            android:text="Swap Manager Flag"
            android:onClick="@{() -> employeeDataHandler.swapManagerFlag()}"/> <!-- Event Handling using Listener Binding -->
    </LinearLayout>
</layout>
